@model List<Booking> //Dynamic object, Strongly typed view
@{
	ViewData["Title"] = "Index";
}

<h1>Welcome to booking view!</h1>
<form asp-action="Index" asp-controller="Booking" method="get">
	<input type="text" placeholder="Name includes..." name="searchByCustomerName" value="@ViewBag.searchByCustomerName" id="searchBar"/>
	<button type="submit">Filter results</button>
	<button onclick="document.getElementById('searchBar').value=null">Clear filter</button>
</form>
<br />
<table class="table table-bordered">
	<thead class="table-dark">
		<tr>

			<th>Booked service</th>
			<th>Booked by</th>
			<th>Booking date</th>
			<th>More details</th>
			<th>Edit</th>
			<th>Delete</th>

		</tr>
	</thead>
	<tbody>
		@foreach (Booking b in Model) //Using model adding in the top of the file
		{
			<tr>

				<td>@b.ServiceId</td>
				<td>@b.CustomerName</td>
				<td>@b.Created</td>
				<td><a asp-action="ShowDetails" asp-route-id="@b.Id" class="btn btn-success">Show details</a></td>
				<td><a asp-action="Edit" asp-route-id="@b.Id" class="btn btn-warning">Edit </a></td>
				<td><a asp-action="Delete" asp-route-id="@b.Id" class="btn btn-danger">Delete </a></td>

			</tr>
		}
	</tbody>
</table>
<a asp-action="Add" asp-controller="Booking" class="btn btn-success">Add a new booking</a>

